{"version":3,"file":"static/webpack/static/development/pages/content/[slug].js.121644d9339ed1410fab.hot-update.js","sources":["webpack:///./components/showcase/components/Banner.js"],"sourcesContent":["import React, { useCallback, useRef, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { debugComponent } from \"../../../lib/logger\";\nimport { ShowcaseContext } from \"../ShowcaseContext\";\nimport Swiper from \"./Swiper\";\nimport DocumentScroll from \"./DocumentScroll\";\n\nconst Banner = props => {\n  const { onResize } = props;\n  const bannerRef = useRef();\n  const handleSwipe = useCallback(\n    (position, action) => {\n      const size = Math.max(0, position.y2 - position.y1);\n      bannerRef.current.style.transform = `scale(${1 + size * 0.003})`;\n      bannerRef.current.style.transition = !size ? \"all linear 100ms\" : \"none\";\n      onResize(size);\n    },\n    [onResize]\n  );\n  const handleScroll = useCallback(() => {\n    if (bannerRef.current) {\n      const scrollY =\n        document.documentElement.scrollTop || document.body.scrollTop || 0;\n      if (scrollY < window.innerHeight - 260) {\n        bannerRef.current.style.transform = `translateY(-${scrollY * 0.3}px)`;\n        bannerRef.current.style.transition = !scrollY\n          ? \"all linear 100ms\"\n          : \"none\";\n      }\n    }\n  }, [bannerRef.current]);\n  const banner =\n    props.banner && props.banner.indexOf(\"http\") !== 0\n      ? process.env.FILE_URL + props.banner\n      : props.banner;\n  const element = useMemo(() => {\n    debugComponent(\"<Banner />\", 4);\n    return (\n      <>\n        <div className={banner ? \"overlay\" : \"\"}>\n          <div ref={bannerRef} className=\"banner\" />\n          <Swiper id=\"banner-swiper\" onSwipe={handleSwipe} />\n        </div>\n        {typeof window !== \"undefined\" ? (\n          <DocumentScroll onScroll={handleScroll} />\n        ) : null}\n        <style jsx>{`\n          .overlay {\n            height: calc(100vh - 200px - 40px);\n            position: fixed;\n            width: 441px;\n            perspective: 8px;\n            perspective-origin: 50%;\n          }\n          .banner {\n            top: -10px;\n            z-index: -1;\n            position: fixed;\n            transform-origin: top center;\n            height: calc(100vh - 200px - 40px + 10px);\n            background: #dde6ef url(${banner}) no-repeat center top;\n            background-size: cover;\n            width: 441px;\n          }\n          @media only screen and (max-width: 768px) {\n            .overlay,\n            .banner {\n              width: 100%;\n              max-width: 100%;\n            }\n          }\n        `}</style>\n      </>\n    );\n  }, [banner]); // Dependencies required to re-render\n  return element;\n};\n\nexport default Banner;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAoCA;AACA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}